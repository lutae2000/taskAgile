plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.taskagile'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
// https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
    implementation group: 'org.mybatis', name: 'mybatis-spring', version: '3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
// https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc11
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc11', version: '23.2.0.0'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '3.1.4'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


bootRun {
    systemProperties = System.getProperties()
}

task preIntegrationTest(type: Exec) {
    dependsOn 'bootRun'
    commandLine 'echo', 'Pre Integration Test'
}

task postIntegrationTest(type: Exec) {
    commandLine 'echo', 'Post Integration Test'
}

task frontendInstall(type: Exec){
    workingDir "${projectDir}/frontend"
    commandLine 'npm', 'install'
}

task frontendUnitTest(type: Exec){
    workingDir "${projectDir}/frontend"
    commandLine 'npm', 'run' ,'test:unit'
}

task frontendBuild(type: Exec){
    workingDir "${projectDir}/frontend"
    commandLine 'npm', 'run', 'build'
}

task frontE2ETest(type: Exec){
    workingDir "${projectDir}/frontend"
    commandLine 'npm', 'run', 'test:e2e'
}

task copyFrontendTemplate(type: Copy){
    from "${projectDir}/front-end/dist"
    include 'index.html'
    into "${buildDir}/resources/templates"
}

task copyFrontendAssets(type: Copy) {
    from "${projectDir}/front-end/dist"
    exclude 'index.html'
    into "${buildDir}/resources/static"
}

task cleanFrontendFiles(type: Delete){
    delete "${projectDir}/src/main/resources/statc/static"
    delete "${projectDir}/src/main/resources/templates/index.html"
}

preIntegrationTest.dependsOn bootRun
postIntegrationTest.mustRunAfter preIntegrationTest

copyFrontendTemplate.dependsOn frontendBuild
copyFrontendAssets.dependsOn frontendBuild
cleanFrontendFiles.dependsOn 'clean'

tasks.named('test') {
    useJUnitPlatform()
}
